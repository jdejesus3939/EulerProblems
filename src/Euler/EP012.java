/* Euler Problem 012
 * The sequence of triangle numbers is generated by adding the natural numbers.
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
 * The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * Let us list the factors of the first seven triangle numbers:
 *  1: 1
 *  3: 1,3
 *  6: 1,2,3,6
 *  10: 1,2,5,10
 *  15: 1,3,5,15
 *  21: 1,3,7,21
 *  28: 1,2,4,7,14,28
 *  We can see that 28 is the first triangle number to have over five divisors.
 *  What is the value of the first triangle number to have over five hundred divisors?
 */

package Euler;

public class EP012 {
	
	public int findFactor(int number) {
		int factor = 0;
		
		for (int i = 1; i < Math.sqrt(number * 1.0); i++) {
			if (number % i == 0)
				factor += 2;
		}
		
		if (number % Math.sqrt(number * 1.0) == 0)
			factor++;
		
		return factor;
	}

	public void solution() {
		int triangleNumber = 1;
		int a = 1;
		
		while (findFactor(triangleNumber) < 500) {
			// this is just a luck simplification -_-!
			// instead of linear iteration
			a++;
			triangleNumber += a;
		}
		
		System.out.println(Integer.toString(triangleNumber));
	}
	
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		new EP012().solution();
	}

}
