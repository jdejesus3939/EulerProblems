/* Euler Problem 002
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */

package Euler;

public class EP002 {
	
	public String solution() {
		int sum = 0;
		int first = 1;
		int second = 2;
		int third = 0;
		
		sum = second;
		
		while (third < 4000000) {
			third = first + second;
			
			if (third % 2 ==0) {
				sum += third;
			}
			
			first = second;
			second = third;
		}
		
		return Integer.toString(sum);
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String result = new EP002().solution();
		System.out.println(result);
	}

}
